---
title: Accelerated Python
subtitle: Speed up your Python code with compilers and parallel execution.
description: |
  Python has become the dominant language in scientific computing thanks to its high-level syntax, extensive
  ecosystem, and ease of use. However, its performance often lags behind traditional compiled languages like
  C, C++, and Fortran, as well as newer contenders like Julia and Chapel. This course is designed to help you
  speed up your Python workflows using a variety of tools and techniques.

  We'll begin with classic optimization methods such as NumPy-based vectorization, and explore just-in-time
  compilation using Numba, along with performance profiling techniques. From there, we'll delve into
  parallelization -- starting with multithreading using external libraries like NumExpr and Python 3.13's new
  free-threading capabilities -- but placing greater emphasis on multiprocessing.

  Next, we'll dive into Ray, a powerful and flexible framework for scaling Python applications. While Ray is
  widely used in AI, our focus will be on its core capabilities for distributed computing and data
  processing. You'll learn how to parallelize CPU-bound numerical workflows -- with and without reduction --
  as well as optimize I/O-bound tasks. We'll also explore combining Ray with Numba and will discuss coding
  tightly coupled parallel problems.
title-block-banner: true
---

<!-- Please note: this course does not cover GPU computing (which merits its own course), nor will we dive -->
<!-- into mpi4py, the standard MPI library for Python. -->

:::{.topdef}

**Date:** \
Friday, June 13, 2025

**Time:** \
9:30pmâ€“4:30pm with a one-hour lunch break (12:30pm-1:30pm)

**Location:** \
SFU's Big Data Hub Presentation Studio (ASB 10900)

**Instructor:** \
Alex Razoumov

**Prerequisites:** \
Some knowledge of basic Python, numpy, and working with the Slurm scheduler.

**Software:** \
We will provide access to one of our Linux systems. To make use of it, attendees will need a remote secure shell (SSH) client installed on their computer. On Windows we recommend the [free Home Edition of MobaXterm](https://mobaxterm.mobatek.net/download.html). On Mac and Linux computers, SSH is usually pre-installed (try typing `ssh` in a terminal to make sure it is there).

:::

<br>

* Course notes: [Part 1 - Towards high-performance Python](https://wgpages.netlify.app/pythonhpc) and
                [Part 2 - Distributed computing with Ray](https://wgpages.netlify.app/ray)
* If you don't yet have a username for the training cluster, please claim one
  [here](https://tinyurl.com/clusterusernames) by choosing an unclaimed username and writing your name or
  nickname next to it.
